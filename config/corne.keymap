// dt-formatter: indent="  "
// dt-formatter: multilineIntegerCellsIndent="reindent"

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
  behaviors {
    hrm: hrm {
      compatible = "zmk,behavior-hold-tap";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
      retro-tap;
      hold-while-undecided;
    };

    mhrm: mhrm {
      compatible = "zmk,behavior-hold-tap";
      bindings = <&kp>, <&mkp>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
      retro-tap;
      hold-while-undecided;
    };

    lhrm: lhrm {
      compatible = "zmk,behavior-hold-tap";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34>;
      retro-tap;
      hold-while-undecided;
    };

    rhrm: rhrm {
      compatible = "zmk,behavior-hold-tap";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
      hold-while-undecided;
      retro-tap;
      hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
    };
  };

  combos {
    compatible = "zmk,combos";

    combo_lesc {
      bindings = <&kp ESC>;
      key-positions = <1 2>;
    };

    combo_resc {
      bindings = <&kp ESC>;
      key-positions = <10 9>;
    };

    combo_ltab {
      bindings = <&kp TAB>;
      key-positions = <4 3>;
    };

    combo_shift_ltab {
      bindings = <&kp LS(TAB)>;
      key-positions = <2 3>;
    };

    combo_rtab {
      bindings = <&kp TAB>;
      key-positions = <7 8>;
    };

    combo_shift_rtab {
      bindings = <&kp RS(TAB)>;
      key-positions = <6 7>;
    };
  };

  macros {
    ctrl_globe: ctrl_globe {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings =
        <&macro_press>,
        <&kp LCTRL>,
        <&macro_press>,
        <&kp GLOBE &macro_param_1to1>,
        <&macro_release>,
        <&kp MACRO_PLACEHOLDER>,
        <&macro_release>,
        <&kp LCTRL>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &trans  &kp Q           &kp W          &kp E         &kp R         &kp T            &kp Y             &kp U         &kp I         &kp O          &kp P              &trans
        &trans  &lhrm LSHIFT A  &lhrm LCTRL S  &lhrm LALT D  &lhrm LGUI F  &lhrm GLOBE G    &rhrm GLOBE H     &rhrm RGUI J  &rhrm RALT K  &rhrm RCTRL L  &rhrm RSHIFT SEMI  &trans
        &trans  &kp Z           &kp X          &kp C         &kp V         &kp B            &kp N             &kp M         &kp FSLH      &kp COMMA      &kp DOT            &trans
                                               &mo 1         &kp BSPC      &mkp LCLK        &hrm RGUI RETURN  &kp SPACE     &mo 2
      >;
    };

    sym {
      bindings = <
        &trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
        &trans  &kp TILDE  &kp GRAVE  &kp DQT   &kp SQT   &trans       &kp MINUS  &kp PLUS   &kp PIPE   &kp LBRC  &kp RBRC  &trans
        &trans  &trans     &trans     &trans    &trans    &trans       &kp UNDER  &kp EQUAL  &kp BSLH   &kp LBKT  &kp RBKT  &trans
                                      &mo 1     &kp DEL   &mkp MCLK    &kp ESC    &kp TAB    &mo 2
      >;
    };

    num {
      bindings = <
        &trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5       &kp F6   &kp F7       &kp F8  &kp F9   &kp F10  &trans
        &trans  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5       &kp N6   &kp N7       &kp N8  &kp N9   &kp N0   &trans
        &trans  &trans  &trans  &trans  &trans   &trans       &trans   &trans       &trans  &kp F11  &kp F12  &trans
                                &mo 1   &kp DEL  &mkp RCLK    &kp ESC  &kp LS(TAB)  &mo 2
      >;
    };

    nav {
      bindings = <
        &trans  &ctrl_globe DOWN  &ctrl_globe UP  &ctrl_globe LEFT  &ctrl_globe RIGHT  &kp F11           &ctrl_globe R  &kp LC(LS(TAB))  &kp LC(TAB)  &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))  &trans
        &trans  &kp TAB           &trans          &kp LG(LS(TAB))   &kp LG(TAB)        &trans            &kp LEFT       &kp DOWN         &kp UP       &kp RIGHT         &trans             &trans
        &trans  &kp LS(TAB)       &trans          &bt BT_PRV        &bt BT_NXT         &bt BT_CLR_ALL    &kp HOME       &kp PG_DN        &kp PG_UP    &kp END           &trans             &trans
                                                  &trans            &trans             &trans            &trans         &trans           &trans
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
